% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{PAMST}
\alias{PAMST}
\title{Compute approximate MST from an arbitrary graph using PAMST method}
\usage{
PAMST(order, Elist, privacydegree)
}
\arguments{
\item{order}{Number of nodes in the graph}

\item{Elist}{edges list as a data.frame}

\item{privacydegree}{degree of privacy}
}
\value{
The approximate MST using the PAMST algorithm
}
\description{
Compute approximate MST from an arbitrary graph using PAMST method
}
\examples{
n <- 70
prob <- 0.1
## Generate random Erdos-Renyi graph
graph <- erdos.renyi.game(n, prob, type="gnp",directed = FALSE, loops = FALSE)
## Assign random weights to the edges, using an uniform probability distribution
E(graph)$weight <- runif(ecount(graph),0,10)
eps <- 0.6
Dataframe=igraph::as_data_frame(graph,what="edges")
PMST <- PAMST(n,Dataframe,eps)
print(sum( PMST[,3] ))
print(sum(E(mst(graph))$weight))

## plot the resulting MST
## Be careful the ids are not allowed to be 0 !
approxMST <- igraph::graph_from_edgelist(cbind(PMST[,1]+1,PMST[,2]+1),directed = FALSE)
mylayout <- layout.auto(graph)
par(mfrow=c(1,2))
plot(graph, layout=mylayout, vertex.size=5, vertex.label=NA)
plot(approxMST, layout=mylayout, vertex.size=5, vertex.label=NA)

}
